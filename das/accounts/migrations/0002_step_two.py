# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-22 19:01
from __future__ import unicode_literals

import accounts.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PermissionSet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='name')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text="The permission set's parent set. None, if it is a root node.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='accounts.PermissionSet', verbose_name='parent')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.Permission')),
            ],
            options={
                'verbose_name_plural': 'permission sets',
                'verbose_name': 'permission set',
            },
            managers=[
                ('tree', django.db.models.manager.Manager()),
                ('objects', accounts.models.PermissionSetManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='permission_sets',
            field=mptt.fields.TreeManyToManyField(blank=True, help_text='The permission sets this user belongs to. A user will get all permissions granted to each of their permission sets.', to='accounts.PermissionSet'),
        ),
    ]
