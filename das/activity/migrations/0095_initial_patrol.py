# Generated by Django 2.2.9 on 2020-08-11 18:27

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import revision.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activity', '0094_merge_20200617_2036'),
    ]

    operations = [
        migrations.CreateModel(
            name='MembershipType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=50, unique=True)),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patrol',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('serial_number', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='Serial Number')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, 'Gray'), (100, 'Green'), (200, 'Amber'), (300, 'Red')], default=0)),
                ('state', models.PositiveSmallIntegerField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('past', 'Past')], default='active')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('objective', models.TextField(blank=True)),
                ('time_range', django.contrib.postgres.fields.ranges.DateTimeRangeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, revision.manager.RevisionMixin),
        ),
        migrations.CreateModel(
            name='PatrolType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=50, unique=True)),
                ('display', models.CharField(max_length=255)),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('default_priority', models.PositiveSmallIntegerField(choices=[(0, 'Gray'), (100, 'Green'), (200, 'Amber'), (300, 'Red')], default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('display', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
            ],
            options={
                'verbose_name': 'Person',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('observations.subject',),
        ),
        migrations.CreateModel(
            name='PatrolSegment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('scheduled_start', models.DateTimeField(blank=True, null=True)),
                ('time_range', django.contrib.postgres.fields.ranges.DateTimeRangeField(blank=True, null=True)),
                ('start_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('end_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('state', models.PositiveSmallIntegerField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('past', 'Past')], default='active')),
                ('patrol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patrol_assignments', related_query_name='patrol_assignment', to='activity.Patrol')),
                ('patrol_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='activity.PatrolType')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', related_query_name='source', to='observations.Source')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, revision.manager.RevisionMixin),
        ),
        migrations.CreateModel(
            name='PatrolNote',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('created_by_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('patrol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', related_query_name='note', to='activity.Patrol')),
            ],
            options={
                'abstract': False,
            },
            bases=(revision.manager.RevisionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PatrolFile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment about the file.')),
                ('usercontent_id', models.UUIDField()),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patrol_files', related_query_name='patrol_file', to=settings.AUTH_USER_MODEL)),
                ('patrol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', related_query_name='file', to='activity.Patrol')),
                ('usercontent_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'usercontent'), ('model', 'filecontent')), models.Q(('app_label', 'usercontent'), ('model', 'imagefilecontent')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, revision.manager.RevisionMixin),
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', related_query_name='team_membership', to='activity.Person')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', related_query_name='member', to='activity.Team')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.MembershipType')),
            ],
            options={
                'ordering': ['type', 'ordernum'],
                'unique_together': {('type', 'team', 'person')},
            },
        ),
        migrations.CreateModel(
            name='PatrolSegmentRevision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('action', models.CharField(choices=[('added', 'Added'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('rel-del', 'Relation Deleted')], default='added', max_length=10)),
                ('revision_at', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.IntegerField(help_text='Revision sequence')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('user', revision.manager.UserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='_patrolsegment_revision', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('object_id', 'sequence')},
            },
        ),
        migrations.CreateModel(
            name='PatrolSegmentMembership',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
                ('patrol_segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', related_query_name='member', to='activity.PatrolSegment')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patrolsegment_memberships', related_query_name='patrolsegment_membership', to='activity.Person')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='activity.MembershipType')),
            ],
            options={
                'ordering': ['type', 'ordernum'],
                'unique_together': {('type', 'patrol_segment', 'person')},
            },
        ),
        migrations.CreateModel(
            name='PatrolRevision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('action', models.CharField(choices=[('added', 'Added'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('rel-del', 'Relation Deleted')], default='added', max_length=10)),
                ('revision_at', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.IntegerField(help_text='Revision sequence')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('user', revision.manager.UserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='_patrol_revision', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('object_id', 'sequence')},
            },
        ),
        migrations.CreateModel(
            name='PatrolNoteRevision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('action', models.CharField(choices=[('added', 'Added'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('rel-del', 'Relation Deleted')], default='added', max_length=10)),
                ('revision_at', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.IntegerField(help_text='Revision sequence')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('user', revision.manager.UserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='_patrolnote_revision', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('object_id', 'sequence')},
            },
        ),
        migrations.CreateModel(
            name='PatrolFileRevision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('action', models.CharField(choices=[('added', 'Added'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('rel-del', 'Relation Deleted')], default='added', max_length=10)),
                ('revision_at', models.DateTimeField(auto_now_add=True)),
                ('sequence', models.IntegerField(help_text='Revision sequence')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('user', revision.manager.UserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='_patrolfile_revision', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
                'unique_together': {('object_id', 'sequence')},
            },
        ),
    ]
