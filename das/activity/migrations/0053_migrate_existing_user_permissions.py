# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-03-30 20:32
from __future__ import unicode_literals

from django.db import migrations

from accounts.models import User, PermissionSet
from django.contrib.auth.models import Permission


all_perms = ['monitoring_create',  'monitoring_read',  'monitoring_update',  'monitoring_delete',
             'security_create',  'security_read',  'security_update',  'security_delete',
             'logistics_create', 'logistics_read', 'logistics_update', 'logistics_delete']

restricted_perms = ['security_create',  'security_read',  'security_update',
                    'logistics_create', 'logistics_read', 'logistics_update']


def create_new_permission_sets(apps, schema_editor):

    # users = User.objects.all()
    # if len(users) == 0:
    #     return

    all_group, created = PermissionSet.objects.get_or_create(
        name='all_event_permissions')
    restricted_group, created = PermissionSet.objects.get_or_create(
        name='restricted_event_permissions')

    existing_security_group = PermissionSet.objects.get_or_create(
        name='security_events')

    for perm_name in all_perms:
        try:
            perm = Permission.objects.get_by_natural_key(
                perm_name, 'activity', 'event')
            all_group.permissions.add(perm)
        except Permission.DoesNotExist:
            pass
    for perm_name in restricted_perms:
        try:
            perm = Permission.objects.get_by_natural_key(
                perm_name, 'activity', 'event')
            restricted_group.permissions.add(perm)
        except Permission.DoesNotExist:
            pass
    for user in User.objects.all():
        if user.permission_sets.filter(name='security_events').exists():
            user.permission_sets.add(all_group)
            continue

        # If they didn't get all perms, they get restricted perms by default
        user.permission_sets.add(restricted_group)


def reverse_new_permission_sets(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('activity', '0052_merge'),
    ]

    operations = [
        migrations.RunPython(create_new_permission_sets,
                             reverse_new_permission_sets),
    ]
