# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2017-01-06 22:37
from __future__ import unicode_literals

from django.db import migrations

EVENT_CATEGORY_ID = 'ef230385-5afc-40d1-ad07-c811f6da2b3c'

IMMOBILITY_SCHEMA = """{
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "EventType Immobility",
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "title": "Details"
          },
          "name": {
            "type": "string",
            "title": "Name of animal"
          },
          "cluster_fix_count": {
            "type": "number",
            "title": "Cluster Fix Count"
          },
          "total_fix_count": {
            "type": "number",
            "title": "Total Fix Count"
          },
          "cluster_radius": {
            "type": "number",
            "title": "Cluster Search Radius"
          },
          "probability_value": {
            "type": "number",
            "title": "Probability"
          }
        },
        "definition": [
          "name",
          "details",
          "probability_value",
          "total_fix_count",
          "cluster_fix_count",
          "cluster_radius"
        ]
      }
    }"""


def forward_f(apps, schema_editor):
    EventCategory = apps.get_model('activity', 'EventCategory')
    EventType = apps.get_model('activity', 'EventType')

    db_alias = schema_editor.connection.alias

    EventCategory.objects.using(db_alias).create(id=EVENT_CATEGORY_ID,
                                                 value='analyzer_event',
                                                 display='Analyzer Event', ordernum=1)

    EventType.objects.using(db_alias).create(id='c419acac-874d-422e-8b7b-54470afe56c5',
                                             value='immobility',
                                             display='Immobility',
                                             category_id=EVENT_CATEGORY_ID,
                                             ordernum=300,
                                             is_collection=False,
                                             schema=IMMOBILITY_SCHEMA)

    EventType.objects.using(db_alias).create(id='8bf325e7-2880-447a-b2d8-156c66bc5708',
                                             value='immobility_all_clear',
                                             display='Immobility All Clear',
                                             category_id=EVENT_CATEGORY_ID,
                                             ordernum=301,
                                             is_collection=False,
                                             schema=IMMOBILITY_SCHEMA)


def reverse_f(apps, schema_editor):
    EventCategory = apps.get_model('activity', 'EventCategory')
    EventType = apps.get_model('activity', 'EventType')

    db_alias = schema_editor.connection.alias

    EventCategory.objects.using(db_alias).create(id=EVENT_CATEGORY_ID,
                                                 value='analyzer_event',
                                                 display='Analyzer Event', ordernum=1)

    EventType.objects.using(db_alias).filter(id='c419acac-874d-422e-8b7b-54470afe56c5',
                                             value='immobility').delete()

    EventType.objects.using(db_alias).filter(id='8bf325e7-2880-447a-b2d8-156c66bc5708',
                                             value='immobility_all_clear').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('activity', '0049_event_comment'),
    ]


    operations = [
        migrations.RunPython(forward_f, reverse_f),
    ]
