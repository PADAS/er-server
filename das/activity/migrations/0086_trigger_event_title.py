# Generated by Django 2.2.9 on 2020-04-22 13:48

from django.db import migrations

TRIGGER_EVENT_TITLE = """
CREATE OR REPLACE FUNCTION tsvector_event_title_trigger() RETURNS trigger as $$
begin
    update activity_tsvectormodel ts set
        tsvector_event =
        setweight(to_tsvector(et.display)::tsvector, 'A')||
        setweight(to_tsvector(coalesce(e.title,'')), 'B')||
        setweight(to_tsvector(et.schema::text), 'B')||
        setweight(to_tsvector((ed.data#>> '{event_details}')::text), 'A')
        from activity_event e, activity_eventtype et, activity_eventdetails ed 
        where e.event_type_id = et.id and ed.event_id = e.id and e.id = ts.event_id
           and e.id = OLD.id;
    return new;
end
$$ LANGUAGE plpgsql;

CREATE TRIGGER tsvector_event_title_update AFTER UPDATE OF title
on activity_event
FOR EACH ROW EXECUTE PROCEDURE tsvector_event_title_trigger();
"""

DROP_EVENT_TITILE_TRIGGER = """
DROP TRIGGER IF EXISTS tsvector_event_title_update ON activity_event;
"""


class Migration(migrations.Migration):

    dependencies = [
        ('activity', '0085_full_text_search'),
    ]

    operations = [
        migrations.RunSQL(TRIGGER_EVENT_TITLE,
                          reverse_sql=DROP_EVENT_TITILE_TRIGGER),
    ]
