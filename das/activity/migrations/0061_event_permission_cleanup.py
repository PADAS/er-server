# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-06-19 22:22
from __future__ import unicode_literals

from django.core.management import call_command
from django.db import migrations

import utils.models
from accounts.models import PermissionSet, User

security_users = []
monitoring_users = []

old_set_names = ['security_events', 'View Security Events', 'View Reporting Events ',
                 'Add/Edit Events', 'all_event_permissions', 'all_event_permissions',
                 'restricted_event_permissions', 'Events Read-Only', 'Only Add Events']
new_security_group_name = 'Admin User Event Permissions'
new_monitoring_group_name = 'Radio Room Operator Event Permissions'


def populate_new_permission_sets(apps, ):
    utils.models.migrate_permissions(apps)
    call_command('loaddata', 'new_permission_sets', app_label='activity')


def forward_pre(apps, schema_editor):

    # First let's see who the users are who can currently see security events
    for user in User.objects.all():
        if user.permission_sets.filter(name='security_events').exists() or user.permission_sets.filter(name='all_event_permissions').exists():
            security_users.append(user)
        else:
            monitoring_users.append(user)

    # Next, delete all event permission sets because some are old and some
    # were created incorrectly
    for set_name in old_set_names:
        pset = PermissionSet.objects.filter(name=set_name).first()
        if pset:
            pset.delete()


def forward_post(apps, schema_editor):
    # Populate the new permission sets from a fixture
    populate_new_permission_sets(apps)

    security_permission_set = PermissionSet.objects.get(
        name=new_security_group_name)
    monitoring_permission_set = PermissionSet.objects.get(
        name=new_monitoring_group_name)

    for security_user in security_users:
        security_user.permission_sets.add(security_permission_set)
        security_user.save()

    for monitoring_user in monitoring_users:
        monitoring_user.permission_sets.add(monitoring_permission_set)
        monitoring_user.save()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('activity', '0060_event_category_flag'),
        ('observations', '0010_use_al'),
    ]

    operations = [
        migrations.RunPython(forward_pre, backwards),
        migrations.AlterModelOptions(
            name='event',
            options={'permissions': (
                ('security_create', 'Create security reports'),
                ('security_read', 'View security reports'),
                ('security_update', 'Modify security reports'),
                ('security_delete', 'Delete security reports'),
                ('monitoring_create', 'Create monitoring reports'),
                ('monitoring_read', 'View monitoring reports'),
                ('monitoring_update', 'Modify monitoring reports'),
                ('monitoring_delete', 'Delete monitoring reports'),
                ('logistics_create', 'Create logistics reports'),
                ('logistics_read', 'View logistics reports'),
                ('logistics_update', 'Modify logistics reports'),
                ('logistics_delete', 'Delete logistics reports'),
                ('analyzer_event_create', 'Create analyzer reports'),
                ('analyzer_event_read', 'View analyzer reports'),
                ('analyzer_event_update', 'Modify analyzer reports'),
                ('analyzer_event_delete', 'Delete analyzer reports'),
                ('standard__deprecated_read', 'View DEPRECATED monitoring reports'),
                ('standard__deprecated_update',
                 'Modify DEPRECATED monitoring reports'),
                ('security__deprecated_read', 'View DEPRECATED security reports'), (
                    'security__deprecated_update',
                    'Modify DEPRECATED security reports'))},
        ),
        migrations.AlterModelOptions(
            name='eventcategory',
            options={},
        ),
        migrations.RunPython(forward_post, backwards),
    ]
