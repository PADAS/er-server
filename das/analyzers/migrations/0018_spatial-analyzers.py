# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-09-22 23:46
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import revision.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0043_spatial-analyzers'),
        ('analyzers', '0017_geofence-analyzer'),
    ]

    operations = [
        migrations.CreateModel(
            name='LowSpeedAnalyzerConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4,
                                        primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True,
                                          verbose_name='A friendly, unique name for the analyzer.')),
                ('notes', models.TextField(blank=True, default='')),
                ('schedule', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=[
                ], size=None, verbose_name='Array of crontab schedule patterns that an analyzer can use to determine whether to run.')),
                ('is_active', models.BooleanField(
                    default=True, help_text='Designates whether this analyzer is active. Set this False instead of deleting this record.', verbose_name='active')),
                ('search_time_hours', models.FloatField(
                    default=24.0, verbose_name='The period over which to run the subject analyzer')),
                ('low_threshold_percentile', models.FloatField(default=0.01)),
                ('default_value', models.FloatField(default=0.05)),
                ('subject_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                    to='observations.SubjectGroup', verbose_name='This analyzer applies to subjects in this SubjectGroup.')),
            ],
            options={
                'abstract': False,
            },
            bases=(revision.manager.RevisionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SpeedDistro',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4,
                                        primary_key=True, serialize=False)),
                ('percentiles', django.contrib.postgres.fields.jsonb.JSONField(
                    blank=True, default={})),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectSpeedProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4,
                                        primary_key=True, serialize=False)),
                ('subject', models.OneToOneField(blank=True, null=True,
                                                 on_delete=django.db.models.deletion.CASCADE, to='observations.Subject')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='speeddistro',
            name='subject_speed_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='SpeedDistros', to='analyzers.SubjectSpeedProfile'),
        ),
    ]
