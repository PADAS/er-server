# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-04-27 21:12
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import revision.manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('observations', '0033_annotations'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('analyzers', '0013_delete_old_analyzers'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImmobilityAnalyzer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='A friendly, unique name for the analyzer.')),
                ('notes', models.TextField(blank=True, default='')),
                ('schedule', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=[], size=None, verbose_name='Array of crontab schedule patterns that an analyzer can use to determine whether to run.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this analyzer is active. Set this False instead of deleting this record.', verbose_name='active')),
                ('threshold_radius', models.FloatField(default=13.0)),
                ('threshold_time', models.IntegerField(default=18000)),
                ('threshold_probability', models.FloatField(default=0.8)),
                ('search_time_hours', models.FloatField(default=24.0)),
                ('subject_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.SubjectGroup', verbose_name='This analyzer applies to subjects in this SubjectGroup.')),
            ],
            options={
                'abstract': False,
            },
            bases=(revision.manager.RevisionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ObservationAnnotator',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('max_speed', models.FloatField(default=10.0, verbose_name='Maximum speed (km/h)')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Subject')),
            ],
            options={
                'abstract': False,
            },
            bases=(revision.manager.RevisionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50, verbose_name='Schedule represented in crontab syntax.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this Schedule is active. Set this False instead of deleting this record.', verbose_name='active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectAnalyzerResult',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('analyzer_revision', models.IntegerField()),
                ('geometry_collection', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
                ('estimated_time', models.DateTimeField(auto_now_add=True)),
                ('level', models.IntegerField()),
                ('values', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={})),
                ('message', models.TextField(blank=True, default='')),
                ('subject_analyzer_id', models.UUIDField()),
                ('subject_analyzer_revision', models.PositiveIntegerField(default=1)),
                ('observations', models.ManyToManyField(related_name='_subjectanalyzerresult_observations_+', to='observations.Observation')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='observations.Subject')),
                ('subject_analyzer_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
