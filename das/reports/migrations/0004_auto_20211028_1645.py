# Generated by Django 2.2.14 on 2021-10-28 23:45

from django.db import migrations

SILENCE_SOURCE_SCHEMA = """{
    "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "Entry Alert",
        "type": "object",
        "readonly": true,
        "properties": {
            "report_time": {
                "type": "number",
                "title": "Heading at entry (deg)"
            },
            "location": {
                "type": "number",
                "title": "Speed at entry (knots)"
            },
            "device_id": {
                "type": "string",
                "title": "Device ID"
            },
            "name_assigned_subject": {
                "type": "string",
                "title": "Name of assigned subject"
            },
            "source_provider": {
                "type": "string",
                "title": "Source Provider"
            },
            "silence_threshold": {
                "type": "string",
                "title": "Silence Threshold"
            },
            "latest_position_recorded_at": {
                "type": "string",
                "title": "Latest position recorded at"
            }
        }
    },
    "definition": [
        "report_time",
        "location",
        "device_id",
        "name_assigned_subject",
        "source_provider",
        "silence_threshold",
        "latest_position_recorded_at"
    ]
}
"""

SILENCE_SOURCE_PROVIDER_SCHEMA = """
{
    "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "title": "Entry Alert",
        "type": "object",
        "readonly": true,
        "properties": {
            "report_time": {
                "type": "string",
                "title": "Report Time"
            },
            "silence_threshold": {
                "type": "string",
                "title": "Silence threshold(hh:mm)"
            },
            "last_device_reported_at": {
                "type": "string",
                "title": "Last device reported at"
            }
        }
    },
    "definition": [
        "report_time",
        "silence_threshold",
        "last_device_reported_at"
    ]
}
"""


def forwards(apps, schema_editor):

    EventCategory = apps.get_model("activity", "EventCategory")
    EventType = apps.get_model("activity", "EventType")

    db_alias = schema_editor.connection.alias

    event_category, _ = EventCategory.objects.using(db_alias).get_or_create(
        value="analyzer_event", defaults={"display": "Analyzer Event", "ordernum": 1}
    )
    events_type = [
        {
            "display": "Silent Source",
            "value": "silence_source_rep",
            "category_id": event_category.id,
            "default_priority": 200,
            "is_collection": False,
            "schema": SILENCE_SOURCE_SCHEMA,
        },
        {
            "display": "Silent Source Provider",
            "value": "silence_source_provider_rep",
            "category_id": event_category.id,
            "default_priority": 200,
            "is_collection": False,
            "schema": SILENCE_SOURCE_PROVIDER_SCHEMA,
        },
    ]

    for event_type in events_type:
        EventType.objects.using(db_alias).update_or_create(
            defaults=event_type, value=event_type.get("value")
        )


class Migration(migrations.Migration):

    dependencies = [
        ("reports", "0003_silent_source_permissions"),
    ]

    operations = [
        migrations.RunPython(forwards, reverse_code=migrations.RunPython.noop)
    ]
