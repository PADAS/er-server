# Generated by Django 2.0.2 on 2018-05-15 21:16

from django.db import migrations, models
from django.core.management import call_command
import django.db.models.deletion
import observations.models
import uuid

CREATE_MISSING_SUBJECT_TYPES = '''
with t0 as (select distinct(subject_type) val from observations_subject) 
    insert into observations_subjecttype (created_at, updated_at, id, value, display, ordernum)
       select current_timestamp, current_timestamp, uuid_generate_v4(), t0.val, t0.val, 0 
       from t0 
       on conflict (value) do nothing;
'''

CREATE_MISSING_SUBJECT_SUBTYPES = '''
with t0 as (select distinct(subject_subtype) val from observations_subject) 
     insert into observations_subjectsubtype (created_at, updated_at, id, value, display, ordernum, subject_type_id)
        select current_timestamp, current_timestamp, uuid_generate_v4(), t0.val, t0.val, 0, 'unassigned' 
        from t0 
        on conflict (value) do nothing;
'''


def load_subject_types(apps, schema_editor):
    call_command('loaddata', 'subject_types')


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0048_sourceprovider_displayname'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4)),
                ('value', models.CharField(max_length=40,
                                           primary_key=True, serialize=False, unique=True)),
                ('display', models.CharField(blank=True,
                                             max_length=100, verbose_name='Subject Type')),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectSubType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4)),
                ('value', models.CharField(max_length=40,
                                           primary_key=True, serialize=False, unique=True)),
                ('display', models.CharField(blank=True,
                                             max_length=100, verbose_name='Subject Type')),
                ('ordernum', models.SmallIntegerField(blank=True, null=True)),
                ('subject_type', models.ForeignKey(default=observations.models.get_default_subject_type,
                                                   on_delete=django.db.models.deletion.PROTECT,
                                                   to='observations.SubjectType')),
            ],
            options={
                'abstract': False,
            },
        ),

        # Load data into SubjectSubType and SubjectType.
        migrations.RunPython(load_subject_types,
                             reverse_code=migrations.RunPython.noop),

        migrations.RunSQL('SET CONSTRAINTS ALL IMMEDIATE',
                          reverse_sql=migrations.RunSQL.noop),

        migrations.RunSQL(sql=CREATE_MISSING_SUBJECT_TYPES,
                          reverse_sql=migrations.RunSQL.noop),

        migrations.RunSQL(sql=CREATE_MISSING_SUBJECT_SUBTYPES,
                          reverse_sql=migrations.RunSQL.noop),

        # Drop subject_type. It will be replaced by SubjectType.
        migrations.RemoveField(
            model_name='subject',
            name='subject_type',
        ),

        migrations.AlterField(
            model_name='commonname',
            name='subject_subtype',
            field=models.ForeignKey(default=observations.models.get_default_subject_subtype,
                                    on_delete=django.db.models.deletion.PROTECT, to='observations.SubjectSubType'),
        ),

        migrations.AlterField(
            model_name='subject',
            name='subject_subtype',
            field=models.ForeignKey(default=observations.models.get_default_subject_subtype,
                                    on_delete=django.db.models.deletion.PROTECT, to='observations.SubjectSubType'),
        ),
        migrations.AlterField(
            model_name='subjecttracksegmentfilter',
            name='subject_subtype',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to='observations.SubjectSubType'),
        ),

        migrations.RunSQL(sql=migrations.RunSQL.noop,
                          reverse_sql='SET CONSTRAINTS ALL IMMEDIATE'),

    ]
