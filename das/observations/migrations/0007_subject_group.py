# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-22 19:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_step_two'),
        ('observations', '0006_auto_20160105_1055'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='name')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text="The Group's parent. None, if it is a root node.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='observations.SubjectGroup', verbose_name='parent')),
                ('permission_sets', models.ManyToManyField(blank=True, help_text='The permission sets applied to this table. A user in a permission set is granted these permissions.', to='accounts.PermissionSet')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('tree', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='group',
            field=mptt.fields.TreeForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='observations.SubjectGroup'),
        ),
        migrations.AlterModelOptions(
            name='subject',
            options={'permissions': (('view_last_position', 'Allow the user to view the last reported position of a Subject.'), ('view_real_time', 'Access to updated observations as they become available, includes view_last_position.'), ('view_delayed', 'Access to a time dated observation feed. The delay is 24 hours, i.e. can only see yesterday and older observations. No real-time or last position.'), ('subscribe_alerts', 'Permission to subscribe to an alert on this Subject.'), ('change_alerts', 'Permission to configure alerts for subject, includes setting geofences, proximity and immobility settings.'), ('change_view', 'An admin permission to change which users can view a Subject and their view permission.'))},
        ),
    ]
